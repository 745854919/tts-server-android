plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk 33
    namespace 'com.github.jing332.tts_server_android'
    defaultConfig {
        applicationId 'com.github.jing332.tts_server_android'
        minSdk 21
        targetSdk 33
        versionCode 3
        versionName "0.2"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            //签名文件 从local.properties取值
            Properties pro = new Properties()
            InputStream input = project.rootProject.file("local.properties").newDataInputStream()
            pro.load(input)
            storeFile file(pro.getProperty("KEY_PATH"))
            storePassword pro.getProperty("KEY_PASSWORD")
            keyAlias pro.getProperty("ALIAS_NAME")
            keyPassword pro.getProperty("ALIAS_PASSWORD")
        }
    }

    buildTypes {
        release {
            versionNameSuffix "_${releaseTime()}"
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "_debug"
            splits.abi.enable = false
            splits.density.enable = false
        }
    }

    // 分别打包APK 原版 和 dev共存版
    flavorDimensions += "version"
    productFlavors {
        app {
            dimension = "version"
        }
        dev {
            dimension = "version"
            applicationIdSuffix ".dev"
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    // 修改apk文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def abiName = output.getFilter(com.android.build.OutputFile.ABI)
            if (abiName == null)
                output.outputFileName = "TTS-Server-v${variant.versionName}.apk"
            else
                output.outputFileName = "TTS-Server-v${variant.versionName}_${abiName}.apk"
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    //noinspection GradleDependency
    coreLibraryDesugaring('com.android.tools:desugar_jdk_libs:1.1.6')

    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.8.0-rc01'

    implementation 'androidx.preference:preference:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    //RecyclerView
    implementation 'com.github.liangjingkanji:BRV:1.3.85'

    //Room
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    androidTestImplementation("androidx.room:room-testing:$room_version")

    //SharedPreference
    implementation 'com.chibatching.kotpref:kotpref:2.13.1'

    // IO & NET
    implementation 'com.squareup.okio:okio:3.2.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.github.liangjingkanji:Net:3.5.2'

    // Media
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.2'

    testImplementation 'junit:junit:4.13.2'
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}
